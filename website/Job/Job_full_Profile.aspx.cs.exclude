using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using System.Data;
using System.Globalization;
public partial class Job_Job_full_Profile : System.Web.UI.Page
{
    public DataTable dt;
    public DataTable dt2;
    public string str1 = string.Empty;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {

            if (Request.QueryString["JID"] != null)
            {
                hdfjobid.Value = Convert.ToString(Request.QueryString["JID"]);
                Bind_SingleJob();

            }
            bind_CounterView();
        }
    }

    public void bind_CounterView()
    {

        DataTable dtcount = DataAccess.GetData("Select [View_Counter] from [View_FindJob] Where[job_Id]=" + hdfjobid.Value + " ");
        if (dtcount.Rows.Count > 0)
        {
            lblCounter.Text = dtcount.Rows[0]["View_Counter"].ToString();
        }
    }



    public void Bind_SingleJob()
    {
        dt = DataAccess.GetData("select * from [View_FindJob] Where JobCategory !='JobSheeker' and [job_Id]=" + hdfjobid.Value + " and Exp IS NOT NULL and MimiSalery IS NOT NULL and job_Qulalification IS NOT NULL order by [CreatedOn] desc ");
       if(dt.Rows.Count>0)
        {
            this.Page.Title = dt.Rows[0]["job_Title"].ToString();
            

            string jobDesc = dt.Rows[0]["job_Desc"].ToString();
            int headingLength1 = jobDesc.Length;
            if (headingLength1 > 150)
            {
                string str1 = jobDesc.Substring(0, 150);
                jobDesc = str1 + "  ..... ";

            }
            
                lblDesc.Text = jobDesc;
            
            //this.Page.MetaDescription = jobDesc;

            hdfPostedOn.Value = dt.Rows[0]["jobopen_Date"].ToString();

      if (hdfPostedOn.Value != string.Empty)
        {
            DateTime dthdfOpDate = Convert.ToDateTime(hdfPostedOn.Value);
            DateTime dtcurrentD = DateTime.Now;
            TimeSpan t = dtcurrentD - dthdfOpDate;
            double CurDay = t.TotalDays;
            int var = Convert.ToInt32(CurDay);
            string DayAgo = string.Empty;
            if (var < 7)
            {
                DayAgo = Convert.ToString(var + " Day(s) ago");
            }
            else if (var >= 7 && var < 30)
            {
                int noWeek = var / 7;
                int noday = var % 7;
                if (noday > 0)
                {
                    DayAgo = noWeek + " Week and " + noday + " Day(s) ago";
                }
                else
                {
                    DayAgo = noWeek + " Week ago";//Convert.ToString(var+" Days");
                }
            }
            else if (var >= 30)
            {
                int noWeek = var / 30;
                int noday = var % 30;
                if (noday > 0)
                {
                    if (noday >= 7)
                    {
                        int noWeek1 = noday / 7;
                        int noday1 = noday % 7;
                        if (noday1 > 0)
                        {
                            DayAgo = noWeek + " Month, " + noWeek1 + " Week and " + noday1 + " Day(s) ago";
                        }
                        else
                        {
                            DayAgo = noWeek1 + " Week ago";//Convert.ToString(var+" Days");
                        }
                    }
                    else
                    {
                        DayAgo = noWeek + " Month and " + noday + " Day(s) ago";
                    }
                }
                else
                {
                    DayAgo = noWeek + " Month ago";//Convert.ToString(var+" Days");
                }
            }
            lblPostDay.Text = DayAgo;
        }




        }
    }


    public DataTable BindJobSkill(string job_Id)
    {

        DataTable dtskill = DataAccess.GetData("Select distinct [Skill_Name] from [View_Post_Job_Skill] Where [job_Id]=" + job_Id + " ");
        return dtskill;

    }

   
}